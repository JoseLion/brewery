buildscript {
  configurations.classpath {
    resolutionStrategy.activateDependencyLocking()
  }
}

plugins {
  id 'java-library'
}

dependencyLocking {
  lockAllConfigurations()
}

repositories {
  jcenter()
}

dependencies {
  testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0')

  testRuntimeOnly(group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0')
}

test {
  useJUnitPlatform()

  reports {
    junitXml.destination = file("${buildDir}/test-results/junit")
  }
}

gradle.taskGraph.whenReady {
  if (gradle.startParameter.writeDependencyLocks == true) {
    def lockFile = new File('gradle.lock')
    def mergeList = files(
      'gradle/wrapper/gradle-wrapper.properties',
      fileTree('gradle/dependency-locks').getFiles()
    )

    lockFile.write('')
    mergeList.each {
      lockFile << "## LOCKFILE: ${it.name}\n"
      lockFile << '#\n'
      lockFile << it.text

      if (it != mergeList.last()) {
        lockFile << '\n\n'
      }
    }
  }
}

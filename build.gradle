buildscript {
  configurations.classpath {
    resolutionStrategy.activateDependencyLocking()
  }
}

plugins {
  id 'jacoco'
  id 'java-library'

  id 'com.github.joselion.pretty-jupiter' version '1.3.0'
  id 'org.sonarqube' version '2.8'
}

dependencyLocking {
  lockAllConfigurations()
}

repositories {
  jcenter()
}

dependencies {
  implementation(group: 'com.github.joselion', name: 'maybe', version: '1.0.2-GA')
  implementation(group: 'org.javassist', name: 'javassist', version: '3.27.0-GA')
  implementation(group: 'org.reflections', name: 'reflections', version: '0.9.12')

  testImplementation(group: 'org.assertj', name: 'assertj-core', version: '3.15.0')
  testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0')

  testRuntimeOnly(group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0')
}

test {
  useJUnitPlatform()

  testLogging.showStandardStreams = true

  reports {
    junitXml.destination = file("${buildDir}/test-results/junit")
  }
}

jacocoTestReport {
  reports {
    xml.enabled(true)
    html.enabled(true)
  }
}

sonarqube {
  properties {
    property 'sonar.projectKey', 'JoseLion_brewery'
    property 'sonar.organization', 'joselion'
    property 'sonar.host.url', 'https://sonarcloud.io'
    property 'sonar.junit.reportPaths', "${buildDir}/test-results/junit"
    property 'sonar.coverage.jacoco.xmlReportPaths', "${jacoco.reportsDir}/test/jacocoTestReport.xml"
  }
}
